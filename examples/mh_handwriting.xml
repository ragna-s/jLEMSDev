 

<LemsLite>
 
    <DiscreteUpdateComponent name="lif_neuron">
        <Interface>
            <Parameter name="bias"/>
            <Parameter name="gain"/>
            <Parameter name="constInput"/>
            
            <InputEventPort name="spike-in">
                <Parameter name="weight"/>
            </InputEventPort>
            
            <OutputEventPort name="spike-out"/>            

            <Constant name="one_over_rc_float" value="0.0488281"/>
 			<Constant name="ptsc_scale_float" value="0.154279"/>
 
 
            <OutputVariable name="v"/>
        </Interface>

        <State>
            <StateVariable name="v"/>
            <StateVariable name="inp"/>
            <StateVariable name="ref"/>
        </State>

        <Step>
            <!-- The original code ensures that "v > 0", but I thin th is should be OK! -->
            <Var name="total" value="(gain * (inp + constInput)) + bias"/>
            
            <Var name="dv" value="(total-v) * one_over_rc_float"/>
            <Update variable="v" value="v + dv"/>
            <Update variable="inp" value="inp * (1. - ptsc_scale_float)"/>


            <!-- event_handling -->
            <ConditionCheck/>

            
            <Output variable="v" value="v"/>
        </Step>


        <OnEvent port="spike-in" >
            <Update variable="inp" value="inp + weight * one_over_rc_float"/>
        </OnEvent>

        

        <!-- Is there a spike? -->
        <OnCondition if="v .gt. 1.0">
            <Update variable="v" value="0"/>
            <Update variable="ref" value="2"/>
            <Emit port="spike-out"/>
        </OnCondition>
        
        <!-- Are are in a refactory period -->
        <OnCondition if="ref .gt. 0">
            <Update variable="v" value="0"/>
            <Update variable="ref" value="ref-1"/>
        </OnCondition>
        
    </DiscreteUpdateComponent>



    <DataSources>
        <!-- <File name="src_img.txt" id="f_src_img" format="csv" shape="(784,1)" /> -->

        <File name="mh_handwriting/NetworkSetup/mh_conv_nrn_params_level0" id="f_params_pop0" format="csv" shape="(5,3000)"/>
        <File name="mh_handwriting/NetworkSetup/mh_conv_nrn_params_level1" id="f_params_pop1" format="csv" shape="(5,1500)"/>
        <File name="mh_handwriting/NetworkSetup/mh_conv_nrn_params_level2" id="f_params_pop2" format="csv" shape="(5,900)"/>
        <File name="mh_handwriting/NetworkSetup/mh_conv_nrn_params_level3" id="f_params_pop3" format="csv" shape="(5,152)"/>

        <File name="mh_handwriting/NetworkSetup/mh_conv_nrn_connections_levels_0_1" id="f_conns_pop0_pop1" format="csv" shape="(3,?)"/>
        <File name="mh_handwriting/NetworkSetup/mh_conv_nrn_connections_levels_1_2" id="f_conns_pop1_pop2" format="csv" shape="(3,?)"/>
        <File name="mh_handwriting/NetworkSetup/mh_conv_nrn_connections_levels_2_3" id="f_conns_pop2_pop3" format="csv" shape="(3,?)"/>



        <!-- N.B Zero based indexing -->

        <!-- Population parameters: -->
        <!-- ====================== -->
        <!-- Pop0 -->
        <Array name="pop0_bias">       <FileSource file="f_params_pop0" column="1"/> </Array>
        <Array name="pop0_gain">       <FileSource file="f_params_pop0" column="2"/> </Array>
        <Array name="pop0_constInput"> <FileSource file="f_params_pop0" column="3"/> </Array>
        <Array name="pop0_inp">        <FileSource file="f_params_pop0" column="4"/> </Array>

        <!-- Pop1 -->
        <Array name="pop1_bias">       <FileSource file="f_params_pop1" column="1"/> </Array>
        <Array name="pop1_gain">       <FileSource file="f_params_pop1" column="2"/> </Array>
        <Array name="pop1_constInput"> <FileSource file="f_params_pop1" column="3"/> </Array>
        <Array name="pop1_inp">        <FileSource file="f_params_pop1" column="4"/> </Array>

        <!-- Pop2 -->
        <Array name="pop2_bias">       <FileSource file="f_params_pop2" column="1"/> </Array>
        <Array name="pop2_gain">       <FileSource file="f_params_pop2" column="2"/> </Array>
        <Array name="pop2_constInput"> <FileSource file="f_params_pop2" column="3"/> </Array>
        <Array name="pop2_inp">        <FileSource file="f_params_pop2" column="4"/> </Array>

        <!-- Pop3 -->
        <Array name="pop3_bias">       <FileSource file="f_params_pop3" column="1"/> </Array>
        <Array name="pop3_gain">       <FileSource file="f_params_pop3" column="2"/> </Array>
        <Array name="pop3_constInput"> <FileSource file="f_params_pop3" column="3"/> </Array>
        <Array name="pop3_inp">        <FileSource file="f_params_pop3" column="4"/> </Array>


        <!-- Connection weights: -->
        <!-- ====================== -->
        <!-- Pop0 to Pop1 -->
        <Array name="conn01_pre">    <FileSource file="f_conns_pop0_pop1" column="0"/> </Array>
        <Array name="conn01_post">   <FileSource file="f_conns_pop0_pop1" column="1"/> </Array>
        <Array name="conn01_weight"> <FileSource file="f_conns_pop0_pop1" column="2"/> </Array>

        <!-- Pop1 to Pop2 -->
        <Array name="conn12_pre">    <FileSource file="f_conns_pop1_pop2" column="0"/> </Array>
        <Array name="conn12_post">   <FileSource file="f_conns_pop1_pop2" column="1"/> </Array>
        <Array name="conn12_weight"> <FileSource file="f_conns_pop1_pop2" column="2"/> </Array>

        <!-- Pop2 to Pop3 -->
        <Array name="conn23_pre">    <FileSource file="f_conns_pop2_pop3" column="0"/> </Array>
        <Array name="conn23_post">   <FileSource file="f_conns_pop2_pop3" column="1"/> </Array>
        <Array name="conn23_post">   <FileSource file="f_conns_pop2_pop3" column="1"/> </Array>
        <Array name="conn23_weight"> <FileSource file="f_conns_pop2_pop3" column="2"/> </Array>

    </DataSources>


    <ComponentArray name="level0" component="lif_neuron" size="3000">
        <Let parameter="constInput" array="pop0_constInput"/>
        <Let parameter="bias" array="pop0_bias"/>
        <Let parameter="gain" array="pop0_gain"/>

        <Initialize stateVariable="inp" array="pop0_inp" />
    </ComponentArray>

    <ComponentArray name="level1" component="lif_neuron" size="1500">
        <Let parameter="constInput" array="pop1_constInput"/>
        <Let parameter="bias" array="pop1_bias"/>
        <Let parameter="gain" array="pop1_gain"/>

        <Initialize stateVariable="inp" array="pop1_inp" />
    </ComponentArray>

    <ComponentArray name="level2" component="lif_neuron" size="900">
        <Let parameter="constInput" array="pop2_constInput"/>
        <Let parameter="bias" array="pop2_bias"/>
        <Let parameter="gain" array="pop2_gain"/>

        <Initialize stateVariable="inp" array="pop2_inp" />
    </ComponentArray>


    <ComponentArray name="level3" component="lif_neuron" size="150">        
        <Let parameter="constInput" array="pop3_constInput"/>
        <Let parameter="bias" array="pop3_bias"/>
        <Let parameter="gain" array="pop3_gain"/>

        <Initialize stateVariable="inp" array="pop3_inp" />
    </ComponentArray>



    <!-- Connect Pop0 to Pop1 -->
    <EventConnections name="pop0_to_pop1" from="level0" to="level1">
        <EventSource port="spike-out"/>
        <EventTarget port="spike-in"/>

        <SourceTargetConnector> <FromArrayConnector pre="conn01_pre" post="conn01_post"/> </SourceTargetConnector>

        <ConnectionProperties>
            <Property name="weight" array="conn01_weight"/>
            <Delay value="0"/>
        </ConnectionProperties>

        <EventArguments>
            <Arg name="weight" value="connection.weight"/>
        </EventArguments>
        
    </EventConnections>




    <!-- Connect Pop1 to Pop2 -->
    <EventConnections name="pop1_to_pop2" from="level1" to="level2">
        <EventSource port="spike-out"/>
        <EventTarget port="spike-in"/>

        <SourceTargetConnector> <FromArrayConnector pre="conn12_pre" post="conn12_post"/> </SourceTargetConnector>

        <ConnectionProperties>
            <Property name="weight" array="conn12_weight"/>
            <Delay value="0"/>
        </ConnectionProperties>

        <EventArguments>
            <Arg name="weight" value="connection.weight"/>
        </EventArguments>
        
    </EventConnections>




    <!-- Connect Pop2 to Pop3 -->
    <EventConnections name="pop2_to_pop3" from="level2" to="level3">
        <EventSource port="spike-out"/>
        <EventTarget port="spike-in"/>

        <SourceTargetConnector> <FromArrayConnector pre="conn23_pre" post="conn23_post"/> </SourceTargetConnector>

        <ConnectionProperties>
            <Property name="weight" array="conn23_weight"/>
            <Delay value="0"/>
        </ConnectionProperties>

        <EventArguments>
            <Arg name="weight" value="connection.weight"/>
        </EventArguments>
    </EventConnections>



    
    <Simulation name="handwriting_simulation" dt="1.0e-3" endTime="0.02">
        <OutputFiles>
            <File id="f_out0_csv" name="f_out1.csv" format="csv"/>
        </OutputFiles>


        <Recording startTime="0" endTime="1" interval="0.1">
            <VariableRecording file="f_out0_csv" componentArray="level0" indices="1,2,3" variable="v"/>
	       </Recording>
    
    </Simulation>

</LemsLite>





 
